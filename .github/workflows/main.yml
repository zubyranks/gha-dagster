name: Build and Push Dagster Image to AWS ECR Using OIDC.
on:
  push:
  # workflow_dispatch:
  #   inputs:
  #     version:
  #       description: 'Set the tag version'
  #       required: true 
  #       type: string

jobs:
  build-and-push:
    env:
      aws-region: us-east-1
      ecr_repository: gha-getupside
      VERSION: 1.1.20
      build_args: ""
    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: write    # This is required for actions/checkout

    name: Build and Push to ECR.
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_NUMBER }}:role/gha-dagster
        aws-region: ${{ env.aws-region }}

    - name: Login to Amazon ECR.
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker-container
        driver-opts: |
          image=moby/buildkit:master
          network=host
  
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: buildx-${{ github.sha }}
        restore-keys: buildx-
  
    - name: Determine tags
      id: docker-meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ steps.login-ecr.outputs.registry }}/${{ env.ecr_repository }}
        # tags: |
        #   type=sha,event=branch
        #   type=semver,pattern={{raw}}
        # flavor: |
        #   latest=false

    - name: Build and push
      id: build-push
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./wf_lab.Dockerfile
        build-args: ${{ env.build_args }}
        pull: true
        push: true
        tags: ${{ secrets.ACCOUNT_NUMBER }}.dkr.ecr.${{ env.aws-region }}.amazonaws.com/${{ env.ecr_repository }}:workflow_lab_repo_${{ env.VERSION }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Post comment with published image
      uses: marocchino/sticky-pull-request-comment@39c5b5dc7717447d0cba270cd115037d32d28443
      with:
        recreate: true
        header: Published docker image ${{ env.ecr_repository }}
        message: |
          Published docker image ${{ env.ecr_repository }}
          ${{ env.VERSION }}

    # - name: Build, Tag, and Push the Image to Amazon ECR
    #   uses: whoan/docker-build-with-cache-action@fix-yaml-parsing
    #   with:
    #     username: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     image_name: ${{ env.ecr_repository }}
    #     image_tag: workflow_lab_repo_${{ inputs.version }}
    #     push_git_tag: true
    #     registry: ${{ steps.login-ecr.outputs.registry }}
    #     dockerfile: wf_lab.Dockerfile

    # - name: Uploading the Artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: static-site
    #     path: /home/runner/work/gha-frontend/gha-frontend
    #     # path: $GITHUB_WORKSPACE

    # outputs:
    #   tag-name: ${{ steps.increment-git-tag.outputs.git-tag }}
        

  # publish:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push
  #   steps:
  #   - name: Downloading the Artifact.
  #     id: download
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: static-site

  #   - name: Package Artifact
  #     uses: thedoctor0/zip-release@main
  #     with:
  #       filename: site.zip
    
  #   - name: Create a release.
  #     uses: release-drafter/release-drafter@master
  #     id: auto-release-notes
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.WORKFLOW_ACCESS }}
  #     with:
  #       tag: "${{ inputs.version }}"
  #       publish: true
  #       prerelease: false
  #       config-name: release.yml

  #   - name: Dispatch Builds
  #     uses: peter-evans/repository-dispatch@v2
  #     with:
  #       token: ${{ secrets.WORKFLOW_ACCESS }}
  #       event-type: workflow_lab
  #       repository: zubyranks/gha-backend
  #       client-payload: '{"git-tag": "${{ inputs.version }}"}'
   
