name: Build and Push Golang Image to AWS ECR
on:
  push:
    branches: [ main ]
jobs:
  build-and-push:
    env:
      aws-region: us-west-2
      ecr-repository: gha-getupside
      repository: zubyranks/gha-backend

    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.aws-region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Cache Pip Packages
      uses: actions/cache@v3
      with:
        path: /home/runner/workgha-frontend/gha-frontend
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Automatic Tagging of Releases.
      id: increment-git-tag
      run: |
        bash ./build/git_update.sh -v minor

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ecr-repository }}
        IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f wf_lab.Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        pwd
        ls -la

    - name: Uploading the Artifact
      uses: actions/upload-artifact@v3
      with:
        name: static-site
        path: /home/runner/work/gha-frontend/gha-frontend

    outputs:
      tag-name: ${{ steps.increment-git-tag.outputs.git-tag }}
        

  publish:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Downloading the Artifact
      id: download
      uses: actions/download-artifact@v3
      with:
        name: static-site

    - name: Package Artifact
      uses: thedoctor0/zip-release@main
      with:
        filename: site.zip

    - name: Create Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.build-and-push.outputs.tag-name }}
        release_name: Release ${{ github.ref }}
        body: New release for ${{ github.sha }}
        draft: false
        prelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ./site.zip
        asset_name: release-${{ needs.build-and-push.outputs.tag-name }}
        asset_content_type: application/zip

    - name: Dispatch Builds
      run: |
        curl -XPOST \
          -u "zubyranks:${{ secrets.WORKFLOW_ACCESS }}" \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Content-Type: application/json" https://api.github.com/repos/${{ env.repository }} \
          --data '{"event_type": "builds", "client_payload": {"git-tag": "${{ needs.build-and-push.outputs.tag-name }}" }}'


    # - name: Trigger Dagster workflow
    #   uses: convictional/trigger-workflow-and-wait@v1.3.0
    #   with:
    #     owner: zubyranks
    #     repo: gha-backend
    #     github_token: ${{ secrets.WORKFLOW_ACCESS }}
    #     workflow_file_name: main.yml
    #     client_payload: '{"git-version": "${{ needs.build-and-push.outputs.tag-name }}'
   