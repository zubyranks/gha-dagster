name: Build and Push Golang Image to AWS ECR
on:
  push:
    branches: [ main ]
jobs:
  build-and-push:
    env:
      aws-region: us-west-2
      ecr-repository: gha-charles


    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.aws-region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Automated Version Bump
      if: steps.changed-files-specific.outputs.any_changed == 'true'
      id: version-bump
      uses: 'phips28/gh-action-bump-version@master'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        skip-tag:  'true'
        commit-message: 'CI: Bump Image version to {{version}}'
  
    - name: Output Step
      id: version-output
      if: steps.changed-files-specific.outputs.any_changed == 'true'
      env:
        NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
      run: echo "new tag $NEW_TAG"

    # - name: Build, Tag, and Push the Image to Amazon ECR
    #   id: build-image
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: ${{ env.ecr-repository }}
    #     IMAGE_TAG: ${{ steps.version-bump.outputs.newTag }}
    #   run: |
    #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f wf_lab.Dockerfile .
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
